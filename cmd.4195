---------------------------------------------
target: prereqirefiles
    command
---------------------------------------------
make var
    OBJS= a.o b.o c.o \
            d.o
---------------------------------------------
自动推导
    a.o:a.h
    b.o:b.h
---------------------------------------------
伪目标
    .PHONY: clean
    clean:
        rm -rf a.o b.o c.o d.o
---------------------------------------------
makefile的内容
    显示规则
    隐晦规则
    变量定义
    文件指示
        include 
        if
    注释
---------------------------------------------
makefile文件名
    GNUmakefile
        only for GNUmake 
    Makefile 
    makefile 
    make -f file.name
    make --file file.name 
---------------------------------------------
makefile包含文件
    include filename1 *.mk $(FILNAMEMK)
    
    -include filename1 *.mk $(FILNAMEMK)
    sinclude filename1 *.mk $(FILNAMEMK)


    search path:
        current dir
        make [-I dir| --include-dir dir]
        <prefix>/include
---------------------------------------------
env var 
    MAKFILES
        do include operation
---------------------------------------------
makefile 工作过程：
    读入makefile
    读入include的file
    初始化变量
    推到隐晦规则，分析所有规则
    为所有文件创建目标依赖
    根据依赖决定那些文件需要生成
    执行命令
---------------------------------------------
makefile规则
    targets: prereqirefiles
        command1
        command2
    targets: prereqirefiles;command1
        command2
规则中的通配符(和bash是相同的)
    *
    [...]
    ~
    ?
---------------------------------------------
makefile变量的通配
    OBJSE= $(wildcard *.o)
---------------------------------------------
makefile规则文件搜寻
    VPATH
    vpath
        set
            vpath <pattern> <directory>
                vpath %.h ../headers
        clear
            vpath <pattern>
        clear-all
            vpath
---------------------------------------------
makefile多目标
    ---------------------------------------------
    bigoutput littleoutput : text.g
    generate text.g -$(subst output,,$@) > $@
    ---------------------------------------------
    bigoutput : text.g
        generate text.g -big > bigoutput
    littleoutput : text.g
        generate text.g -little > littleoutput
    ---------------------------------------------
    $@
---------------------------------------------
静态模式
    <targets ...>: <target-pattern>: <prereq-patterns ...>
        <commands>
    ---------------------------------------------
    all: $(objects)$(objects): %.o: %.c
        $(CC) -c $(CFLAGS) $< -o $@
    ---------------------------------------------
    $<
        依赖集合
    $@
        目标集合
---------------------------------------------
g++ -M main.cpp 
g++ -MM main.cpp
---------------------------------------------
特殊变量
    $@: 目标文件
    $^: 所有依赖文件
    $<: 第一个依赖文件
    $?: 比目标还要新的依赖文件
    $+: same as $^, duplicated
    $*: 目标模式中%以前的部分
---------------------------------------------
makefile 命令
    以tab开头
    显示命令
        @command 
    禁止显示命令：
        -s, -silent 
    只是显示命令
        -n, --just-print
    命令执行：
        -------------
        cd ~; pwd
        ------------- 
        cd ~
        pwd 
        -------------
        -command
        -------------
        make [-i | --ignore-errors]
        -------------
        make [-k | --keep-going]


        
    

